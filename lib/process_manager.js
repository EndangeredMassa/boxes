// Generated by CoffeeScript 2.0.0-beta8
void function () {
  var activeWindow, spawnWindow, windowId, windows;
  spawnWindow = require('./window');
  windowId = 0;
  windows = {};
  activeWindow = null;
  module.exports = function (screen) {
    var spawnProcess, switchWindow;
    spawnProcess = function (command) {
      var window;
      windowId++;
      window = spawnWindow(screen, {
        title: '' + windowId + '. ' + command,
        command: command
      });
      window.id = windowId;
      windows[windowId] = window;
      window.onFocus = function () {
        return activeWindow = window;
      };
      window.onRemove = function () {
        delete windows[window.id];
        return screen.focusNext();
      };
      activeWindow = window;
      return window;
    };
    switchWindow = function (windowId) {
      var window;
      if (!(null != windowId))
        return;
      window = windows[windowId];
      if (!(null != window))
        return;
      activeWindow = window;
      return window.focus();
    };
    screen.on('keypress', function (char, key) {
      var adjustment, command, id;
      if (key.meta) {
        if (key.name === 't')
          return spawnProcess('nsh');
        adjustment = 2;
        command = key.shift ? 'size' : 'move';
        if (key.name === 'j')
          return activeWindow[command]({ y: -adjustment });
        if (key.name === 'k')
          return activeWindow[command]({ y: adjustment });
        if (key.name === 'h')
          return activeWindow[command]({ x: -adjustment });
        if (key.name === 'l')
          return activeWindow[command]({ x: adjustment });
        if (key.name === '[')
          return activeWindow.scroll(-1);
        if (key.name === ']')
          return activeWindow.scroll(1);
        id = function () {
          try {
            return parseInt(key.name, 10);
          } catch (e$) {
            return;
          }
        }.call(this);
        if (null != id)
          return switchWindow(id);
      }
    });
    process.stdin.on('data', function (data) {
      if (null != data && null != (null != activeWindow ? activeWindow.term : void 0))
        return activeWindow.term.write(data);
    });
    return spawnProcess('nsh');
  };
}.call(this);
